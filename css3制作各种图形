
/*css3 伪类移入左右抖动*/

.shake:hover {
	animation:shake both .2s;
	-webkit-animation:shake both .2s;
	-moz-animation:shake both .2s;
	-o-animation:shake both .2s;
}

@keyframes shake {
	0%, 100% {
	    transform: translateX(0px);
	}
	10%, 30%, 50%, 70%, 90% {
	    transform: translateX(-2px);
	}
	20%, 40%, 60%, 80% {
	    transform: translateX(2px);
	}
}

@-webkit-keyframes shake {
	0%, 100% {
	    transform: translateX(0px);
	}
	10%, 30%, 50%, 70%, 90% {
	    transform: translateX(-2px);
	}
	
	20%, 40%, 60%, 80% {
	    transform: translateX(2px);
	}
}

@-moz-keyframes shake {
	0%, 100% {
	    transform: translateX(0px);
	}
	10%, 30%, 50%, 70%, 90% {
	    transform: translateX(-2px);
	}
	20%, 40%, 60%, 80% {
	    transform: translateX(2px);
	}
}


/* CSS3 伪类鼠标移入/移除放大/缩小 */

.scaling{
	transition: transform 0.3s ease 0s;
	-webkit-transition: transform 0.3s ease 0s;
	-moz-transition: transform 0.3s ease 0s;
	-ms-transition: transform 0.3s ease 0s;
	-o-transition: transform 0.3s ease 0s;
}

.scaling:hover {
	transform: scale(1.2);
	transition: transform 0.3s ease 0s;
	-webkit-transition: transform 0.3s ease 0s;
	-moz-transition: transform 0.3s ease 0s;
	-ms-transition: transform 0.3s ease 0s;
	-o-transition: transform 0.3s ease 0s;
	-webkit-will-change: transform: scale(1.2);
	-moz-will-change: transform: scale(1.2);
	-ms-will-change: transform: scale(1.2);
	-o-will-change: transform: scale(1.2);
}

/* CSS3 伪类鼠标移入放大抖动 */

.shake-scaling{
	transition: transform 0.3s ease 0s;
	will-change:transform;
	-o-transition: transform 0.3s ease 0s;
	-moz-will-change:transform;
	-moz-transition: transform 0.3s ease 0s;
	-webkit-will-change:transform;
	-webkit-transition: transform 0.3s ease 0s;
	-o-will-change:transform;
}

.shake-scaling:hover {
	transform: scale(1.1);
	animation:shakeScaling both 1s;
	-webkit-animation:shakeScaling both 1s;
	-moz-animation:shakeScaling both 1s;
	-o-animation:shakeScaling both 1s;
}

@keyframes shakeScaling {
	0% {
	    transform: scale(1);
	}
	10%, 20% {
	    transform: scale(1) rotate(-3deg);
	}
	30%, 50%, 70%, 90% {
	    transform: scale(1.1) rotate(3deg);
	}
	40%, 60%, 80% {
	    transform: scale(1.1) rotate(-3deg);
	}
	100% {
	    transform: scale(1) rotate(0deg);
	}
}

@-webkit-keyframes shakeScaling {
	0% {
	    transform: scale(1);
	}
	10%, 20% {
	    transform: scale(0.9) rotate(-3deg);
	}
	30%, 50%, 70%, 90% {
	    transform: scale(1.1) rotate(3deg);
	}
	40%, 60%, 80% {
	    transform: scale(1.1) rotate(-3deg);
	}
	
	100% {
	    transform: scale(1) rotate(0deg);
	}
}

@-moz-keyframes shakeScaling {
	0% {
	    transform: scale(1);
	}
	10%, 20% {
	    transform: scale(0.9) rotate(-3deg);
	}
	30%, 50%, 70%, 90% {
	    transform: scale(1.1) rotate(3deg);
	}
	40%, 60%, 80% {
	    transform: scale(1.1) rotate(-3deg);
	}
	100% {
	    transform: scale(1) rotate(0deg);
	}
}


/* CSS3 伪类鼠标移入360°旋转 */
.rotation:hover{
	transform:rotate(360deg);
	-ms-transform:rotate(360deg); /* Internet Explorer */
	-moz-transform:rotate(360deg); /* Firefox */
	-webkit-transform:rotate(360deg); /* Safari 和 Chrome */
	-o-transform:rotate(360deg); /* Opera */
}

/* 45°角3D滑动效果 */

.3DRotation::before {
    content: "";
    top: -460px;
    height: 15px;
    left: -665px;
    width: 200px;
    position: absolute;
    transform: rotate(-45deg);
    background-color: rgba(255, 255, 255, 0.5);
    animation: 1s ease-in 1s normal none infinite running rotation;
}
@keyframes rotation {
	0% {
	    left: -100px;
	    top: 0;
	}
	100% {
	    left: 120px;
	    top: 100px;
	}
}
@keyframes rotation {
	0% {
	    left: -100px;
	    top: 0;
	}
	100% {
	    left: 120px;
	    top: 100px;
	}
}

/*css3制作椭圆形：设置椭圆形的CSS时，高度要设置为宽度的一半，oval属性也要做相应的改变：*/

.oval {
    width: 200px;
    height: 100px;
    background: #e9337c;
    border-radius: 100px / 50px;
    -moz-border-radius: 100px / 50px;
    -webkit-border-radius: 100px / 50px;
} 

/*css3制作三角形:要创建一个CSS三角形，需要使用border，通过设置不同边的透明效果，我们可以制作出三角形的现状。另外，在制作三角形时，宽度和高度要设置为0。
设置border-XXX任意三个方向即可改变方向，若三个left，right，bottom/top的三个值相同，则为等腰三角形*/
                           
.triangle {
    width: 0;
    height: 0;
    border-bottom: 140px solid #fcf921;
    border-left: 70px solid transparent;
    border-right: 70px solid transparent;
}   


/*css3制作倒三角形:与正三角形不同的是，倒三角形要设置的是border-top、border-left和border-right三条边的属性：*/

.inverted-triangle {
    width: 0;
    height: 0;
    border-top: 140px solid #20a3bf;
    border-left: 70px solid transparent;
    border-right: 70px solid transparent;
} 


/*CSS3制作左三角形:左三角形操作的是border-top、border-left和border-right三条边的属性，其中上边和下边要设置透明属性。*/

.left-triangle {
    width: 0;
    height: 0;
    border-top: 70px solid transparent;
    border-right: 140px solid #6bbf20;
    border-bottom: 70px solid transparent;
}  


/*CSS3制作菱形:制作菱形的方法有很多种。这里使用的是transform属性和rotate相结合，使两个正反三角形上下显示。*/

.diamond {
    width: 120px;
    height: 120px;
    background: #1eff00;
    transform-origin: 0 100%;
    transform: rotate(-45deg);
    margin: 60px 0 10px 310px;
    -o-transform-origin: 0 100%;
    -ms-transform-origin: 0 100%;
    -o-transform: rotate(-45deg);
    -ms-transform: rotate(-45deg);
    -moz-transform-origin: 0 100%;
    -moz-transform: rotate(-45deg);
    -webkit-transform-origin: 0 100%;
    -webkit-transform: rotate(-45deg);
} 

/*梯形:梯形是三角形的一个变体，设置CSS梯形时，左右两条边设置为相等，并且给它设置一个宽度。*/

.trapezoid {
    height: 0;
    width: 120px;
    border-bottom: 120px solid #ec3504;
    border-left: 60px solid transparent;
    border-right: 60px solid transparent;
} 


/*制作平行四边形:平行四边形的制作方式是使用transform属性使长方形倾斜一个角度。*/

.parallelogram {
    width: 160px;
    height: 100px;
    background: #8734f7;
    transform: skew(30deg);
    -o-transform: skew(30deg);
    -moz-transform: skew(30deg);
    -webkit-transform: skew(30deg);
}  

/*星形:星形的HTML结构同样使用一个带ID的空div。星形的实现方式比较复杂，主要是使用transform属性来旋转不同的边。*/

.star {
    width: 0;
    height: 0;
    margin: 50px 0;
    color: #fc2e5a;
    display: block;
    position: relative;
    -o-transform: rotate(35deg);
    -ms-transform: rotate(35deg);
    -moz-transform: rotate(35deg);
    -webkit-transform: rotate(35deg);
    border-bottom: 70px solid #fc2e5a;
    border-left: 100px solid transparent;
    border-right: 100px solid transparent;
}
  
.star:before {
    width: 0;
    height: 0;
    top: -45px;
    left: -65px;
    content: '';
    display: block;
    position: absolute;
    -o-transform: rotate(-35deg);
    -ms-transform: rotate(-35deg);
    -moz-transform: rotate(-35deg);
    -webkit-transform: rotate(-35deg);
    border-bottom: 80px solid #fc2e5a;
    border-left: 30px solid transparent;
    border-right: 30px solid transparent;
}
  
.star:after {
    top: 3px;
    width: 0;
    height: 0;
    content: '';
    left: -105px;
    color: #fc2e5a;
    display: block;
    position: absolute;
    -o-transform: rotate(-70deg);
    -ms-transform: rotate(-70deg);
    -moz-transform: rotate(-70deg);
    border-bottom: 70px solid #fc2e5a;
    -webkit-transform: rotate(-70deg);
    border-left: 100px solid transparent;
    border-right: 100px solid transparent;
}    

                          
/*六角星形:和五角星的制作方法不同，六角星形状的制作方法是操纵border属性来制作两半图形，然后合并它们。*/

.hexagram {
    width: 0;
    height: 0;
    display: block;
    margin: 10px auto;
    position: absolute;
    border-bottom: 100px solid #de34f7;
    border-left: 50px solid transparent;
    border-right: 50px solid transparent;
}
  
.hexagram:after {
    width: 0;
    height: 0;
    content: "";
    position: absolute;
    margin: 30px 0 0 -50px;
    border-top: 100px solid #de34f7;
    border-left: 50px solid transparent;
    border-right: 50px solid transparent;
} 

/*六边形:六边形的制作方法可以有很多种，可以像五边形一样，先制作一个长方形，然后在它的上面和下面各放置一个三角形。*/

.hexagon {
    width: 100px;
    height: 55px;
    margin: 10px auto;
    position: relative;
    background: #fc5e5e;
}
  
.hexagon:before {
    left: 0;
    width: 0;
    height: 0;
    top: -25px;
    content: "";
    position: absolute;
    border-bottom: 25px solid #fc5e5e;
    border-left: 50px solid transparent;
    border-right: 50px solid transparent;
}
  
.hexagon:after {
    left: 0;
    width: 0;
    height: 0;
    content: "";
    bottom: -25px;
    position: absolute;
    border-top: 25px solid #fc5e5e;
    border-left: 50px solid transparent;
    border-right: 50px solid transparent;
} 

/*心形:心形的制作是非常复杂的，可以使用伪元素来制作，分别将伪元素旋转不同的角度，并修改transform-origin属性来元素的旋转中心点。*/

.heart-shaped {
    position: relative;
}
  
.heart-shaped:before,.heart-shaped:after {
    top: 0;
    left: 70px;
    content: "";
    width: 70px;
    height: 115px;
    background: red;
    position: absolute;
    transform-origin: 0 100%;
    transform: rotate(-45deg);
    -o-transform-origin: 0 100%;
    -o-transform: rotate(-45deg);
    border-radius: 50px 50px 0 0;
    -ms-transform-origin: 0 100%;
    -ms-transform: rotate(-45deg);
    -moz-transform-origin: 0 100%;
    -moz-transform: rotate(-45deg);
    -webkit-transform-origin: 0 100%;
    -moz-border-radius: 50px 50px 0 0;
    -webkit-transform: rotate(-45deg);
    -webkit-border-radius: 50px 50px 0 0;
}
  
.heart-shaped:after {
    left: 0;
    transform: rotate(45deg);
    transform-origin: 100% 100%;
    -o-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    -moz-transform: rotate(45deg);
    -o-transform-origin: 100% 100%;
    -ms-transform-origin: 100% 100%;
    -webkit-transform: rotate(45deg);
    -moz-transform-origin: 100% 100%;
    -webkit-transform-origin: 100% 100%;
}

/*蛋形:蛋形时椭圆形的一个变体，它的高度要比宽度稍大，并且设置正确的border-radius属性即可以制作出一个蛋形。*/

.egg-shaped {
    width: 136px;
    height: 190px;
    display: block;
    background: #ffc000;
    border-radius: 50% 50% 50% 50% / 60% 60% 40% 40%;
    -webkit-border-radius: 63px 63px 63px 63px / 108px 108px 72px 72px;
} 

/*无穷符号:无穷符号可以通过border属性和设置伪元素的角度来实现。*/

.infinity-symbol {
    width: 220px;
    height: 100px;
    position: relative;
}
  
.infinity-symbol:before,.infinity-symbol:after {
    top: 0;
    left: 0;
    content: "";
    width: 60px;
    height: 60px;
    position: absolute;
    transform: rotate(-45deg);
    border: 20px solid #06c999;
    -o-transform: rotate(-45deg);
    -ms-transform: rotate(-45deg);
    -moz-transform: rotate(-45deg);
    -moz-border-radius: 50px 50px 0;
    border-radius: 50px 50px 0 50px;
    -webkit-transform: rotate(-45deg);
}
  
.infinity-symbol:after {
    right: 0;
    left: auto;
    transform: rotate(45deg);
    -o-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    -moz-transform: rotate(45deg);
    border-radius: 50px 50px 50px 0;
    -webkit-transform: rotate(45deg);
    -moz-border-radius: 50px 50px 50px 0;
}

/*消息提示框：消息提示框可以先制作一个圆角矩形，然后在需要的地方放置一个三角形。*/

.message-box {
    width: 140px;
    height: 100px;
    background: #088cb7;
    position: relative;
    -moz-border-radius: 12px;
    -webkit-border-radius: 12px;
    border-radius: 12px;
}
  
.message-box:before {
    content: "";
    width: 0;
    height: 0;
    right: 100%;
    top: 38px;
    position: absolute;
    border-top: 13px solid transparent;
    border-right: 26px solid #088cb7;
    border-bottom: 13px solid transparent;
}     
